/*
 * Copyright 2020-2020 the nameserviceangent team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *          http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.github.bmhm.nameserviceagent.agent.util;

import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.ConnectException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.net.SocketException;
import java.net.SocketTimeoutException;

class SocketOpenTester implements ReachableTester {

  @Override
  public boolean isReachable(final InetAddress addressToTest, final int timeoutMs) throws IOException {
    try {
      final Socket socket = new Socket();
      socket.setSoTimeout(timeoutMs);
      socket.connect(new InetSocketAddress(addressToTest, 80), timeoutMs);
      socket.close();

      // no-brainer
      return true;
    } catch (final SocketTimeoutException timeoutException) {
      // timeout means unreachable. A firewall would lead to NoRoutToHostException instead.
      return false;
    } catch (final InterruptedIOException | ConnectException interruptedIOException) {
      // this is actually a good thing, because if IO could start, there was a route available.
      // or it was actively blocked (ConnectException), which also means there was a connection attempt.
      return true;
    } catch (final SocketException javaIoIOException) {
      /*
       * every other socket exception is not good:
       * * BindException
       * * ConnectionResetException (not sure)
       * * NoRoutToHostException (obvious)
       * * PortUnreachableException (also not sure about this one)
       */
      return false;
    }
  }
}
